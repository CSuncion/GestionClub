//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace GestionClubView.DataSet {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("DsGestionClub")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class DsGestionClub : global::System.Data.DataSet {
        
        private isp_ListarComprobantesFacturaYBoletaPorFechaDataTable tableisp_ListarComprobantesFacturaYBoletaPorFecha;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public DsGestionClub() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected DsGestionClub(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["isp_ListarComprobantesFacturaYBoletaPorFecha"] != null)) {
                    base.Tables.Add(new isp_ListarComprobantesFacturaYBoletaPorFechaDataTable(ds.Tables["isp_ListarComprobantesFacturaYBoletaPorFecha"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public isp_ListarComprobantesFacturaYBoletaPorFechaDataTable isp_ListarComprobantesFacturaYBoletaPorFecha {
            get {
                return this.tableisp_ListarComprobantesFacturaYBoletaPorFecha;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public override global::System.Data.DataSet Clone() {
            DsGestionClub cln = ((DsGestionClub)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["isp_ListarComprobantesFacturaYBoletaPorFecha"] != null)) {
                    base.Tables.Add(new isp_ListarComprobantesFacturaYBoletaPorFechaDataTable(ds.Tables["isp_ListarComprobantesFacturaYBoletaPorFecha"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal void InitVars(bool initTable) {
            this.tableisp_ListarComprobantesFacturaYBoletaPorFecha = ((isp_ListarComprobantesFacturaYBoletaPorFechaDataTable)(base.Tables["isp_ListarComprobantesFacturaYBoletaPorFecha"]));
            if ((initTable == true)) {
                if ((this.tableisp_ListarComprobantesFacturaYBoletaPorFecha != null)) {
                    this.tableisp_ListarComprobantesFacturaYBoletaPorFecha.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitClass() {
            this.DataSetName = "DsGestionClub";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/DsGestionClub.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableisp_ListarComprobantesFacturaYBoletaPorFecha = new isp_ListarComprobantesFacturaYBoletaPorFechaDataTable();
            base.Tables.Add(this.tableisp_ListarComprobantesFacturaYBoletaPorFecha);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private bool ShouldSerializeisp_ListarComprobantesFacturaYBoletaPorFecha() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            DsGestionClub ds = new DsGestionClub();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public delegate void isp_ListarComprobantesFacturaYBoletaPorFechaRowChangeEventHandler(object sender, isp_ListarComprobantesFacturaYBoletaPorFechaRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class isp_ListarComprobantesFacturaYBoletaPorFechaDataTable : global::System.Data.TypedTableBase<isp_ListarComprobantesFacturaYBoletaPorFechaRow> {
            
            private global::System.Data.DataColumn columnidComprobante;
            
            private global::System.Data.DataColumn columnidEmpresa;
            
            private global::System.Data.DataColumn columntipComprobante;
            
            private global::System.Data.DataColumn columndesTipComprobante;
            
            private global::System.Data.DataColumn columnserNroComprobante;
            
            private global::System.Data.DataColumn columnserComprobante;
            
            private global::System.Data.DataColumn columnnroComprobante;
            
            private global::System.Data.DataColumn columnfecComprobante;
            
            private global::System.Data.DataColumn columncodMoneda;
            
            private global::System.Data.DataColumn columndesMoneda;
            
            private global::System.Data.DataColumn columnimpCambio;
            
            private global::System.Data.DataColumn columnserGuiaComprobante;
            
            private global::System.Data.DataColumn columnnroGuiaComprobante;
            
            private global::System.Data.DataColumn columnfecGuiaComprobante;
            
            private global::System.Data.DataColumn columnidNroComanda;
            
            private global::System.Data.DataColumn columnidAmbiente;
            
            private global::System.Data.DataColumn columnidMesa;
            
            private global::System.Data.DataColumn columnidMozo;
            
            private global::System.Data.DataColumn columnturnoCaja;
            
            private global::System.Data.DataColumn columnmodPagoComprobante;
            
            private global::System.Data.DataColumn columndesPagoComprobante;
            
            private global::System.Data.DataColumn columntipMovComprobante;
            
            private global::System.Data.DataColumn columnimpEfeComprobante;
            
            private global::System.Data.DataColumn columnimpDepComprobante;
            
            private global::System.Data.DataColumn columnimpTarComprobante;
            
            private global::System.Data.DataColumn columnimpBruComprobante;
            
            private global::System.Data.DataColumn columnimpIgvComprobante;
            
            private global::System.Data.DataColumn columnimpNetComprobante;
            
            private global::System.Data.DataColumn columnimpDtrComprobante;
            
            private global::System.Data.DataColumn columnidCliente;
            
            private global::System.Data.DataColumn columnnroIdentificacionCliente;
            
            private global::System.Data.DataColumn columnnombreRazSocialCliente;
            
            private global::System.Data.DataColumn columntipCliente;
            
            private global::System.Data.DataColumn columnestadoComprobante;
            
            private global::System.Data.DataColumn columndesEstado;
            
            private global::System.Data.DataColumn columnobsComprobante;
            
            private global::System.Data.DataColumn columnusuarioAgrega;
            
            private global::System.Data.DataColumn columnfechaAgrega;
            
            private global::System.Data.DataColumn columnusuarioModifica;
            
            private global::System.Data.DataColumn columnfechaModifica;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public isp_ListarComprobantesFacturaYBoletaPorFechaDataTable() {
                this.TableName = "isp_ListarComprobantesFacturaYBoletaPorFecha";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal isp_ListarComprobantesFacturaYBoletaPorFechaDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected isp_ListarComprobantesFacturaYBoletaPorFechaDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn idComprobanteColumn {
                get {
                    return this.columnidComprobante;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn idEmpresaColumn {
                get {
                    return this.columnidEmpresa;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn tipComprobanteColumn {
                get {
                    return this.columntipComprobante;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn desTipComprobanteColumn {
                get {
                    return this.columndesTipComprobante;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn serNroComprobanteColumn {
                get {
                    return this.columnserNroComprobante;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn serComprobanteColumn {
                get {
                    return this.columnserComprobante;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn nroComprobanteColumn {
                get {
                    return this.columnnroComprobante;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn fecComprobanteColumn {
                get {
                    return this.columnfecComprobante;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn codMonedaColumn {
                get {
                    return this.columncodMoneda;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn desMonedaColumn {
                get {
                    return this.columndesMoneda;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn impCambioColumn {
                get {
                    return this.columnimpCambio;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn serGuiaComprobanteColumn {
                get {
                    return this.columnserGuiaComprobante;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn nroGuiaComprobanteColumn {
                get {
                    return this.columnnroGuiaComprobante;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn fecGuiaComprobanteColumn {
                get {
                    return this.columnfecGuiaComprobante;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn idNroComandaColumn {
                get {
                    return this.columnidNroComanda;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn idAmbienteColumn {
                get {
                    return this.columnidAmbiente;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn idMesaColumn {
                get {
                    return this.columnidMesa;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn idMozoColumn {
                get {
                    return this.columnidMozo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn turnoCajaColumn {
                get {
                    return this.columnturnoCaja;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn modPagoComprobanteColumn {
                get {
                    return this.columnmodPagoComprobante;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn desPagoComprobanteColumn {
                get {
                    return this.columndesPagoComprobante;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn tipMovComprobanteColumn {
                get {
                    return this.columntipMovComprobante;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn impEfeComprobanteColumn {
                get {
                    return this.columnimpEfeComprobante;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn impDepComprobanteColumn {
                get {
                    return this.columnimpDepComprobante;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn impTarComprobanteColumn {
                get {
                    return this.columnimpTarComprobante;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn impBruComprobanteColumn {
                get {
                    return this.columnimpBruComprobante;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn impIgvComprobanteColumn {
                get {
                    return this.columnimpIgvComprobante;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn impNetComprobanteColumn {
                get {
                    return this.columnimpNetComprobante;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn impDtrComprobanteColumn {
                get {
                    return this.columnimpDtrComprobante;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn idClienteColumn {
                get {
                    return this.columnidCliente;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn nroIdentificacionClienteColumn {
                get {
                    return this.columnnroIdentificacionCliente;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn nombreRazSocialClienteColumn {
                get {
                    return this.columnnombreRazSocialCliente;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn tipClienteColumn {
                get {
                    return this.columntipCliente;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn estadoComprobanteColumn {
                get {
                    return this.columnestadoComprobante;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn desEstadoColumn {
                get {
                    return this.columndesEstado;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn obsComprobanteColumn {
                get {
                    return this.columnobsComprobante;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn usuarioAgregaColumn {
                get {
                    return this.columnusuarioAgrega;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn fechaAgregaColumn {
                get {
                    return this.columnfechaAgrega;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn usuarioModificaColumn {
                get {
                    return this.columnusuarioModifica;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn fechaModificaColumn {
                get {
                    return this.columnfechaModifica;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public isp_ListarComprobantesFacturaYBoletaPorFechaRow this[int index] {
                get {
                    return ((isp_ListarComprobantesFacturaYBoletaPorFechaRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event isp_ListarComprobantesFacturaYBoletaPorFechaRowChangeEventHandler isp_ListarComprobantesFacturaYBoletaPorFechaRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event isp_ListarComprobantesFacturaYBoletaPorFechaRowChangeEventHandler isp_ListarComprobantesFacturaYBoletaPorFechaRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event isp_ListarComprobantesFacturaYBoletaPorFechaRowChangeEventHandler isp_ListarComprobantesFacturaYBoletaPorFechaRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event isp_ListarComprobantesFacturaYBoletaPorFechaRowChangeEventHandler isp_ListarComprobantesFacturaYBoletaPorFechaRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void Addisp_ListarComprobantesFacturaYBoletaPorFechaRow(isp_ListarComprobantesFacturaYBoletaPorFechaRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public isp_ListarComprobantesFacturaYBoletaPorFechaRow Addisp_ListarComprobantesFacturaYBoletaPorFechaRow(
                        int idEmpresa, 
                        string tipComprobante, 
                        string desTipComprobante, 
                        string serNroComprobante, 
                        string serComprobante, 
                        string nroComprobante, 
                        System.DateTime fecComprobante, 
                        string codMoneda, 
                        string desMoneda, 
                        decimal impCambio, 
                        string serGuiaComprobante, 
                        string nroGuiaComprobante, 
                        System.DateTime fecGuiaComprobante, 
                        int idNroComanda, 
                        int idAmbiente, 
                        int idMesa, 
                        int idMozo, 
                        string turnoCaja, 
                        string modPagoComprobante, 
                        string desPagoComprobante, 
                        string tipMovComprobante, 
                        decimal impEfeComprobante, 
                        decimal impDepComprobante, 
                        decimal impTarComprobante, 
                        decimal impBruComprobante, 
                        decimal impIgvComprobante, 
                        decimal impNetComprobante, 
                        decimal impDtrComprobante, 
                        int idCliente, 
                        string nroIdentificacionCliente, 
                        string nombreRazSocialCliente, 
                        string tipCliente, 
                        string estadoComprobante, 
                        string desEstado, 
                        string obsComprobante, 
                        int usuarioAgrega, 
                        System.DateTime fechaAgrega, 
                        int usuarioModifica, 
                        System.DateTime fechaModifica) {
                isp_ListarComprobantesFacturaYBoletaPorFechaRow rowisp_ListarComprobantesFacturaYBoletaPorFechaRow = ((isp_ListarComprobantesFacturaYBoletaPorFechaRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        idEmpresa,
                        tipComprobante,
                        desTipComprobante,
                        serNroComprobante,
                        serComprobante,
                        nroComprobante,
                        fecComprobante,
                        codMoneda,
                        desMoneda,
                        impCambio,
                        serGuiaComprobante,
                        nroGuiaComprobante,
                        fecGuiaComprobante,
                        idNroComanda,
                        idAmbiente,
                        idMesa,
                        idMozo,
                        turnoCaja,
                        modPagoComprobante,
                        desPagoComprobante,
                        tipMovComprobante,
                        impEfeComprobante,
                        impDepComprobante,
                        impTarComprobante,
                        impBruComprobante,
                        impIgvComprobante,
                        impNetComprobante,
                        impDtrComprobante,
                        idCliente,
                        nroIdentificacionCliente,
                        nombreRazSocialCliente,
                        tipCliente,
                        estadoComprobante,
                        desEstado,
                        obsComprobante,
                        usuarioAgrega,
                        fechaAgrega,
                        usuarioModifica,
                        fechaModifica};
                rowisp_ListarComprobantesFacturaYBoletaPorFechaRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowisp_ListarComprobantesFacturaYBoletaPorFechaRow);
                return rowisp_ListarComprobantesFacturaYBoletaPorFechaRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public isp_ListarComprobantesFacturaYBoletaPorFechaRow FindByidComprobante(int idComprobante) {
                return ((isp_ListarComprobantesFacturaYBoletaPorFechaRow)(this.Rows.Find(new object[] {
                            idComprobante})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                isp_ListarComprobantesFacturaYBoletaPorFechaDataTable cln = ((isp_ListarComprobantesFacturaYBoletaPorFechaDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new isp_ListarComprobantesFacturaYBoletaPorFechaDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal void InitVars() {
                this.columnidComprobante = base.Columns["idComprobante"];
                this.columnidEmpresa = base.Columns["idEmpresa"];
                this.columntipComprobante = base.Columns["tipComprobante"];
                this.columndesTipComprobante = base.Columns["desTipComprobante"];
                this.columnserNroComprobante = base.Columns["serNroComprobante"];
                this.columnserComprobante = base.Columns["serComprobante"];
                this.columnnroComprobante = base.Columns["nroComprobante"];
                this.columnfecComprobante = base.Columns["fecComprobante"];
                this.columncodMoneda = base.Columns["codMoneda"];
                this.columndesMoneda = base.Columns["desMoneda"];
                this.columnimpCambio = base.Columns["impCambio"];
                this.columnserGuiaComprobante = base.Columns["serGuiaComprobante"];
                this.columnnroGuiaComprobante = base.Columns["nroGuiaComprobante"];
                this.columnfecGuiaComprobante = base.Columns["fecGuiaComprobante"];
                this.columnidNroComanda = base.Columns["idNroComanda"];
                this.columnidAmbiente = base.Columns["idAmbiente"];
                this.columnidMesa = base.Columns["idMesa"];
                this.columnidMozo = base.Columns["idMozo"];
                this.columnturnoCaja = base.Columns["turnoCaja"];
                this.columnmodPagoComprobante = base.Columns["modPagoComprobante"];
                this.columndesPagoComprobante = base.Columns["desPagoComprobante"];
                this.columntipMovComprobante = base.Columns["tipMovComprobante"];
                this.columnimpEfeComprobante = base.Columns["impEfeComprobante"];
                this.columnimpDepComprobante = base.Columns["impDepComprobante"];
                this.columnimpTarComprobante = base.Columns["impTarComprobante"];
                this.columnimpBruComprobante = base.Columns["impBruComprobante"];
                this.columnimpIgvComprobante = base.Columns["impIgvComprobante"];
                this.columnimpNetComprobante = base.Columns["impNetComprobante"];
                this.columnimpDtrComprobante = base.Columns["impDtrComprobante"];
                this.columnidCliente = base.Columns["idCliente"];
                this.columnnroIdentificacionCliente = base.Columns["nroIdentificacionCliente"];
                this.columnnombreRazSocialCliente = base.Columns["nombreRazSocialCliente"];
                this.columntipCliente = base.Columns["tipCliente"];
                this.columnestadoComprobante = base.Columns["estadoComprobante"];
                this.columndesEstado = base.Columns["desEstado"];
                this.columnobsComprobante = base.Columns["obsComprobante"];
                this.columnusuarioAgrega = base.Columns["usuarioAgrega"];
                this.columnfechaAgrega = base.Columns["fechaAgrega"];
                this.columnusuarioModifica = base.Columns["usuarioModifica"];
                this.columnfechaModifica = base.Columns["fechaModifica"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            private void InitClass() {
                this.columnidComprobante = new global::System.Data.DataColumn("idComprobante", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnidComprobante);
                this.columnidEmpresa = new global::System.Data.DataColumn("idEmpresa", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnidEmpresa);
                this.columntipComprobante = new global::System.Data.DataColumn("tipComprobante", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntipComprobante);
                this.columndesTipComprobante = new global::System.Data.DataColumn("desTipComprobante", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndesTipComprobante);
                this.columnserNroComprobante = new global::System.Data.DataColumn("serNroComprobante", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnserNroComprobante);
                this.columnserComprobante = new global::System.Data.DataColumn("serComprobante", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnserComprobante);
                this.columnnroComprobante = new global::System.Data.DataColumn("nroComprobante", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnnroComprobante);
                this.columnfecComprobante = new global::System.Data.DataColumn("fecComprobante", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnfecComprobante);
                this.columncodMoneda = new global::System.Data.DataColumn("codMoneda", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncodMoneda);
                this.columndesMoneda = new global::System.Data.DataColumn("desMoneda", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndesMoneda);
                this.columnimpCambio = new global::System.Data.DataColumn("impCambio", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnimpCambio);
                this.columnserGuiaComprobante = new global::System.Data.DataColumn("serGuiaComprobante", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnserGuiaComprobante);
                this.columnnroGuiaComprobante = new global::System.Data.DataColumn("nroGuiaComprobante", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnnroGuiaComprobante);
                this.columnfecGuiaComprobante = new global::System.Data.DataColumn("fecGuiaComprobante", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnfecGuiaComprobante);
                this.columnidNroComanda = new global::System.Data.DataColumn("idNroComanda", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnidNroComanda);
                this.columnidAmbiente = new global::System.Data.DataColumn("idAmbiente", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnidAmbiente);
                this.columnidMesa = new global::System.Data.DataColumn("idMesa", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnidMesa);
                this.columnidMozo = new global::System.Data.DataColumn("idMozo", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnidMozo);
                this.columnturnoCaja = new global::System.Data.DataColumn("turnoCaja", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnturnoCaja);
                this.columnmodPagoComprobante = new global::System.Data.DataColumn("modPagoComprobante", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmodPagoComprobante);
                this.columndesPagoComprobante = new global::System.Data.DataColumn("desPagoComprobante", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndesPagoComprobante);
                this.columntipMovComprobante = new global::System.Data.DataColumn("tipMovComprobante", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntipMovComprobante);
                this.columnimpEfeComprobante = new global::System.Data.DataColumn("impEfeComprobante", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnimpEfeComprobante);
                this.columnimpDepComprobante = new global::System.Data.DataColumn("impDepComprobante", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnimpDepComprobante);
                this.columnimpTarComprobante = new global::System.Data.DataColumn("impTarComprobante", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnimpTarComprobante);
                this.columnimpBruComprobante = new global::System.Data.DataColumn("impBruComprobante", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnimpBruComprobante);
                this.columnimpIgvComprobante = new global::System.Data.DataColumn("impIgvComprobante", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnimpIgvComprobante);
                this.columnimpNetComprobante = new global::System.Data.DataColumn("impNetComprobante", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnimpNetComprobante);
                this.columnimpDtrComprobante = new global::System.Data.DataColumn("impDtrComprobante", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnimpDtrComprobante);
                this.columnidCliente = new global::System.Data.DataColumn("idCliente", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnidCliente);
                this.columnnroIdentificacionCliente = new global::System.Data.DataColumn("nroIdentificacionCliente", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnnroIdentificacionCliente);
                this.columnnombreRazSocialCliente = new global::System.Data.DataColumn("nombreRazSocialCliente", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnnombreRazSocialCliente);
                this.columntipCliente = new global::System.Data.DataColumn("tipCliente", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntipCliente);
                this.columnestadoComprobante = new global::System.Data.DataColumn("estadoComprobante", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnestadoComprobante);
                this.columndesEstado = new global::System.Data.DataColumn("desEstado", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndesEstado);
                this.columnobsComprobante = new global::System.Data.DataColumn("obsComprobante", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnobsComprobante);
                this.columnusuarioAgrega = new global::System.Data.DataColumn("usuarioAgrega", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnusuarioAgrega);
                this.columnfechaAgrega = new global::System.Data.DataColumn("fechaAgrega", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnfechaAgrega);
                this.columnusuarioModifica = new global::System.Data.DataColumn("usuarioModifica", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnusuarioModifica);
                this.columnfechaModifica = new global::System.Data.DataColumn("fechaModifica", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnfechaModifica);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnidComprobante}, true));
                this.columnidComprobante.AutoIncrement = true;
                this.columnidComprobante.AllowDBNull = false;
                this.columnidComprobante.ReadOnly = true;
                this.columnidComprobante.Unique = true;
                this.columntipComprobante.MaxLength = 2;
                this.columndesTipComprobante.MaxLength = 60;
                this.columnserNroComprobante.ReadOnly = true;
                this.columnserNroComprobante.MaxLength = 18;
                this.columnserComprobante.MaxLength = 5;
                this.columnnroComprobante.MaxLength = 12;
                this.columncodMoneda.MaxLength = 2;
                this.columndesMoneda.MaxLength = 60;
                this.columnserGuiaComprobante.MaxLength = 5;
                this.columnnroGuiaComprobante.MaxLength = 12;
                this.columnturnoCaja.MaxLength = 2;
                this.columnmodPagoComprobante.MaxLength = 2;
                this.columndesPagoComprobante.MaxLength = 60;
                this.columntipMovComprobante.MaxLength = 2;
                this.columnnroIdentificacionCliente.MaxLength = 20;
                this.columnnombreRazSocialCliente.MaxLength = 60;
                this.columntipCliente.MaxLength = 2;
                this.columnestadoComprobante.MaxLength = 4;
                this.columndesEstado.MaxLength = 60;
                this.columnobsComprobante.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public isp_ListarComprobantesFacturaYBoletaPorFechaRow Newisp_ListarComprobantesFacturaYBoletaPorFechaRow() {
                return ((isp_ListarComprobantesFacturaYBoletaPorFechaRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new isp_ListarComprobantesFacturaYBoletaPorFechaRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(isp_ListarComprobantesFacturaYBoletaPorFechaRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.isp_ListarComprobantesFacturaYBoletaPorFechaRowChanged != null)) {
                    this.isp_ListarComprobantesFacturaYBoletaPorFechaRowChanged(this, new isp_ListarComprobantesFacturaYBoletaPorFechaRowChangeEvent(((isp_ListarComprobantesFacturaYBoletaPorFechaRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.isp_ListarComprobantesFacturaYBoletaPorFechaRowChanging != null)) {
                    this.isp_ListarComprobantesFacturaYBoletaPorFechaRowChanging(this, new isp_ListarComprobantesFacturaYBoletaPorFechaRowChangeEvent(((isp_ListarComprobantesFacturaYBoletaPorFechaRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.isp_ListarComprobantesFacturaYBoletaPorFechaRowDeleted != null)) {
                    this.isp_ListarComprobantesFacturaYBoletaPorFechaRowDeleted(this, new isp_ListarComprobantesFacturaYBoletaPorFechaRowChangeEvent(((isp_ListarComprobantesFacturaYBoletaPorFechaRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.isp_ListarComprobantesFacturaYBoletaPorFechaRowDeleting != null)) {
                    this.isp_ListarComprobantesFacturaYBoletaPorFechaRowDeleting(this, new isp_ListarComprobantesFacturaYBoletaPorFechaRowChangeEvent(((isp_ListarComprobantesFacturaYBoletaPorFechaRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void Removeisp_ListarComprobantesFacturaYBoletaPorFechaRow(isp_ListarComprobantesFacturaYBoletaPorFechaRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DsGestionClub ds = new DsGestionClub();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "isp_ListarComprobantesFacturaYBoletaPorFechaDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class isp_ListarComprobantesFacturaYBoletaPorFechaRow : global::System.Data.DataRow {
            
            private isp_ListarComprobantesFacturaYBoletaPorFechaDataTable tableisp_ListarComprobantesFacturaYBoletaPorFecha;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal isp_ListarComprobantesFacturaYBoletaPorFechaRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableisp_ListarComprobantesFacturaYBoletaPorFecha = ((isp_ListarComprobantesFacturaYBoletaPorFechaDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int idComprobante {
                get {
                    return ((int)(this[this.tableisp_ListarComprobantesFacturaYBoletaPorFecha.idComprobanteColumn]));
                }
                set {
                    this[this.tableisp_ListarComprobantesFacturaYBoletaPorFecha.idComprobanteColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int idEmpresa {
                get {
                    try {
                        return ((int)(this[this.tableisp_ListarComprobantesFacturaYBoletaPorFecha.idEmpresaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'idEmpresa\' de la tabla \'isp_ListarComprobantesFacturaYBol" +
                                "etaPorFecha\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tableisp_ListarComprobantesFacturaYBoletaPorFecha.idEmpresaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string tipComprobante {
                get {
                    try {
                        return ((string)(this[this.tableisp_ListarComprobantesFacturaYBoletaPorFecha.tipComprobanteColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'tipComprobante\' de la tabla \'isp_ListarComprobantesFactur" +
                                "aYBoletaPorFecha\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tableisp_ListarComprobantesFacturaYBoletaPorFecha.tipComprobanteColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string desTipComprobante {
                get {
                    try {
                        return ((string)(this[this.tableisp_ListarComprobantesFacturaYBoletaPorFecha.desTipComprobanteColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'desTipComprobante\' de la tabla \'isp_ListarComprobantesFac" +
                                "turaYBoletaPorFecha\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tableisp_ListarComprobantesFacturaYBoletaPorFecha.desTipComprobanteColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string serNroComprobante {
                get {
                    try {
                        return ((string)(this[this.tableisp_ListarComprobantesFacturaYBoletaPorFecha.serNroComprobanteColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'serNroComprobante\' de la tabla \'isp_ListarComprobantesFac" +
                                "turaYBoletaPorFecha\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tableisp_ListarComprobantesFacturaYBoletaPorFecha.serNroComprobanteColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string serComprobante {
                get {
                    try {
                        return ((string)(this[this.tableisp_ListarComprobantesFacturaYBoletaPorFecha.serComprobanteColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'serComprobante\' de la tabla \'isp_ListarComprobantesFactur" +
                                "aYBoletaPorFecha\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tableisp_ListarComprobantesFacturaYBoletaPorFecha.serComprobanteColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string nroComprobante {
                get {
                    try {
                        return ((string)(this[this.tableisp_ListarComprobantesFacturaYBoletaPorFecha.nroComprobanteColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'nroComprobante\' de la tabla \'isp_ListarComprobantesFactur" +
                                "aYBoletaPorFecha\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tableisp_ListarComprobantesFacturaYBoletaPorFecha.nroComprobanteColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public System.DateTime fecComprobante {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableisp_ListarComprobantesFacturaYBoletaPorFecha.fecComprobanteColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'fecComprobante\' de la tabla \'isp_ListarComprobantesFactur" +
                                "aYBoletaPorFecha\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tableisp_ListarComprobantesFacturaYBoletaPorFecha.fecComprobanteColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string codMoneda {
                get {
                    try {
                        return ((string)(this[this.tableisp_ListarComprobantesFacturaYBoletaPorFecha.codMonedaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'codMoneda\' de la tabla \'isp_ListarComprobantesFacturaYBol" +
                                "etaPorFecha\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tableisp_ListarComprobantesFacturaYBoletaPorFecha.codMonedaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string desMoneda {
                get {
                    try {
                        return ((string)(this[this.tableisp_ListarComprobantesFacturaYBoletaPorFecha.desMonedaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'desMoneda\' de la tabla \'isp_ListarComprobantesFacturaYBol" +
                                "etaPorFecha\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tableisp_ListarComprobantesFacturaYBoletaPorFecha.desMonedaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal impCambio {
                get {
                    try {
                        return ((decimal)(this[this.tableisp_ListarComprobantesFacturaYBoletaPorFecha.impCambioColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'impCambio\' de la tabla \'isp_ListarComprobantesFacturaYBol" +
                                "etaPorFecha\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tableisp_ListarComprobantesFacturaYBoletaPorFecha.impCambioColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string serGuiaComprobante {
                get {
                    try {
                        return ((string)(this[this.tableisp_ListarComprobantesFacturaYBoletaPorFecha.serGuiaComprobanteColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'serGuiaComprobante\' de la tabla \'isp_ListarComprobantesFa" +
                                "cturaYBoletaPorFecha\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tableisp_ListarComprobantesFacturaYBoletaPorFecha.serGuiaComprobanteColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string nroGuiaComprobante {
                get {
                    try {
                        return ((string)(this[this.tableisp_ListarComprobantesFacturaYBoletaPorFecha.nroGuiaComprobanteColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'nroGuiaComprobante\' de la tabla \'isp_ListarComprobantesFa" +
                                "cturaYBoletaPorFecha\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tableisp_ListarComprobantesFacturaYBoletaPorFecha.nroGuiaComprobanteColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public System.DateTime fecGuiaComprobante {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableisp_ListarComprobantesFacturaYBoletaPorFecha.fecGuiaComprobanteColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'fecGuiaComprobante\' de la tabla \'isp_ListarComprobantesFa" +
                                "cturaYBoletaPorFecha\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tableisp_ListarComprobantesFacturaYBoletaPorFecha.fecGuiaComprobanteColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int idNroComanda {
                get {
                    try {
                        return ((int)(this[this.tableisp_ListarComprobantesFacturaYBoletaPorFecha.idNroComandaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'idNroComanda\' de la tabla \'isp_ListarComprobantesFacturaY" +
                                "BoletaPorFecha\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tableisp_ListarComprobantesFacturaYBoletaPorFecha.idNroComandaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int idAmbiente {
                get {
                    try {
                        return ((int)(this[this.tableisp_ListarComprobantesFacturaYBoletaPorFecha.idAmbienteColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'idAmbiente\' de la tabla \'isp_ListarComprobantesFacturaYBo" +
                                "letaPorFecha\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tableisp_ListarComprobantesFacturaYBoletaPorFecha.idAmbienteColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int idMesa {
                get {
                    try {
                        return ((int)(this[this.tableisp_ListarComprobantesFacturaYBoletaPorFecha.idMesaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'idMesa\' de la tabla \'isp_ListarComprobantesFacturaYBoleta" +
                                "PorFecha\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tableisp_ListarComprobantesFacturaYBoletaPorFecha.idMesaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int idMozo {
                get {
                    try {
                        return ((int)(this[this.tableisp_ListarComprobantesFacturaYBoletaPorFecha.idMozoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'idMozo\' de la tabla \'isp_ListarComprobantesFacturaYBoleta" +
                                "PorFecha\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tableisp_ListarComprobantesFacturaYBoletaPorFecha.idMozoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string turnoCaja {
                get {
                    try {
                        return ((string)(this[this.tableisp_ListarComprobantesFacturaYBoletaPorFecha.turnoCajaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'turnoCaja\' de la tabla \'isp_ListarComprobantesFacturaYBol" +
                                "etaPorFecha\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tableisp_ListarComprobantesFacturaYBoletaPorFecha.turnoCajaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string modPagoComprobante {
                get {
                    try {
                        return ((string)(this[this.tableisp_ListarComprobantesFacturaYBoletaPorFecha.modPagoComprobanteColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'modPagoComprobante\' de la tabla \'isp_ListarComprobantesFa" +
                                "cturaYBoletaPorFecha\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tableisp_ListarComprobantesFacturaYBoletaPorFecha.modPagoComprobanteColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string desPagoComprobante {
                get {
                    try {
                        return ((string)(this[this.tableisp_ListarComprobantesFacturaYBoletaPorFecha.desPagoComprobanteColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'desPagoComprobante\' de la tabla \'isp_ListarComprobantesFa" +
                                "cturaYBoletaPorFecha\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tableisp_ListarComprobantesFacturaYBoletaPorFecha.desPagoComprobanteColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string tipMovComprobante {
                get {
                    try {
                        return ((string)(this[this.tableisp_ListarComprobantesFacturaYBoletaPorFecha.tipMovComprobanteColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'tipMovComprobante\' de la tabla \'isp_ListarComprobantesFac" +
                                "turaYBoletaPorFecha\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tableisp_ListarComprobantesFacturaYBoletaPorFecha.tipMovComprobanteColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal impEfeComprobante {
                get {
                    try {
                        return ((decimal)(this[this.tableisp_ListarComprobantesFacturaYBoletaPorFecha.impEfeComprobanteColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'impEfeComprobante\' de la tabla \'isp_ListarComprobantesFac" +
                                "turaYBoletaPorFecha\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tableisp_ListarComprobantesFacturaYBoletaPorFecha.impEfeComprobanteColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal impDepComprobante {
                get {
                    try {
                        return ((decimal)(this[this.tableisp_ListarComprobantesFacturaYBoletaPorFecha.impDepComprobanteColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'impDepComprobante\' de la tabla \'isp_ListarComprobantesFac" +
                                "turaYBoletaPorFecha\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tableisp_ListarComprobantesFacturaYBoletaPorFecha.impDepComprobanteColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal impTarComprobante {
                get {
                    try {
                        return ((decimal)(this[this.tableisp_ListarComprobantesFacturaYBoletaPorFecha.impTarComprobanteColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'impTarComprobante\' de la tabla \'isp_ListarComprobantesFac" +
                                "turaYBoletaPorFecha\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tableisp_ListarComprobantesFacturaYBoletaPorFecha.impTarComprobanteColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal impBruComprobante {
                get {
                    try {
                        return ((decimal)(this[this.tableisp_ListarComprobantesFacturaYBoletaPorFecha.impBruComprobanteColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'impBruComprobante\' de la tabla \'isp_ListarComprobantesFac" +
                                "turaYBoletaPorFecha\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tableisp_ListarComprobantesFacturaYBoletaPorFecha.impBruComprobanteColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal impIgvComprobante {
                get {
                    try {
                        return ((decimal)(this[this.tableisp_ListarComprobantesFacturaYBoletaPorFecha.impIgvComprobanteColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'impIgvComprobante\' de la tabla \'isp_ListarComprobantesFac" +
                                "turaYBoletaPorFecha\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tableisp_ListarComprobantesFacturaYBoletaPorFecha.impIgvComprobanteColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal impNetComprobante {
                get {
                    try {
                        return ((decimal)(this[this.tableisp_ListarComprobantesFacturaYBoletaPorFecha.impNetComprobanteColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'impNetComprobante\' de la tabla \'isp_ListarComprobantesFac" +
                                "turaYBoletaPorFecha\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tableisp_ListarComprobantesFacturaYBoletaPorFecha.impNetComprobanteColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal impDtrComprobante {
                get {
                    try {
                        return ((decimal)(this[this.tableisp_ListarComprobantesFacturaYBoletaPorFecha.impDtrComprobanteColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'impDtrComprobante\' de la tabla \'isp_ListarComprobantesFac" +
                                "turaYBoletaPorFecha\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tableisp_ListarComprobantesFacturaYBoletaPorFecha.impDtrComprobanteColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int idCliente {
                get {
                    try {
                        return ((int)(this[this.tableisp_ListarComprobantesFacturaYBoletaPorFecha.idClienteColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'idCliente\' de la tabla \'isp_ListarComprobantesFacturaYBol" +
                                "etaPorFecha\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tableisp_ListarComprobantesFacturaYBoletaPorFecha.idClienteColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string nroIdentificacionCliente {
                get {
                    try {
                        return ((string)(this[this.tableisp_ListarComprobantesFacturaYBoletaPorFecha.nroIdentificacionClienteColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'nroIdentificacionCliente\' de la tabla \'isp_ListarComproba" +
                                "ntesFacturaYBoletaPorFecha\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tableisp_ListarComprobantesFacturaYBoletaPorFecha.nroIdentificacionClienteColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string nombreRazSocialCliente {
                get {
                    try {
                        return ((string)(this[this.tableisp_ListarComprobantesFacturaYBoletaPorFecha.nombreRazSocialClienteColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'nombreRazSocialCliente\' de la tabla \'isp_ListarComprobant" +
                                "esFacturaYBoletaPorFecha\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tableisp_ListarComprobantesFacturaYBoletaPorFecha.nombreRazSocialClienteColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string tipCliente {
                get {
                    try {
                        return ((string)(this[this.tableisp_ListarComprobantesFacturaYBoletaPorFecha.tipClienteColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'tipCliente\' de la tabla \'isp_ListarComprobantesFacturaYBo" +
                                "letaPorFecha\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tableisp_ListarComprobantesFacturaYBoletaPorFecha.tipClienteColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string estadoComprobante {
                get {
                    try {
                        return ((string)(this[this.tableisp_ListarComprobantesFacturaYBoletaPorFecha.estadoComprobanteColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'estadoComprobante\' de la tabla \'isp_ListarComprobantesFac" +
                                "turaYBoletaPorFecha\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tableisp_ListarComprobantesFacturaYBoletaPorFecha.estadoComprobanteColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string desEstado {
                get {
                    try {
                        return ((string)(this[this.tableisp_ListarComprobantesFacturaYBoletaPorFecha.desEstadoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'desEstado\' de la tabla \'isp_ListarComprobantesFacturaYBol" +
                                "etaPorFecha\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tableisp_ListarComprobantesFacturaYBoletaPorFecha.desEstadoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string obsComprobante {
                get {
                    try {
                        return ((string)(this[this.tableisp_ListarComprobantesFacturaYBoletaPorFecha.obsComprobanteColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'obsComprobante\' de la tabla \'isp_ListarComprobantesFactur" +
                                "aYBoletaPorFecha\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tableisp_ListarComprobantesFacturaYBoletaPorFecha.obsComprobanteColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int usuarioAgrega {
                get {
                    try {
                        return ((int)(this[this.tableisp_ListarComprobantesFacturaYBoletaPorFecha.usuarioAgregaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'usuarioAgrega\' de la tabla \'isp_ListarComprobantesFactura" +
                                "YBoletaPorFecha\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tableisp_ListarComprobantesFacturaYBoletaPorFecha.usuarioAgregaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public System.DateTime fechaAgrega {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableisp_ListarComprobantesFacturaYBoletaPorFecha.fechaAgregaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'fechaAgrega\' de la tabla \'isp_ListarComprobantesFacturaYB" +
                                "oletaPorFecha\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tableisp_ListarComprobantesFacturaYBoletaPorFecha.fechaAgregaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int usuarioModifica {
                get {
                    try {
                        return ((int)(this[this.tableisp_ListarComprobantesFacturaYBoletaPorFecha.usuarioModificaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'usuarioModifica\' de la tabla \'isp_ListarComprobantesFactu" +
                                "raYBoletaPorFecha\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tableisp_ListarComprobantesFacturaYBoletaPorFecha.usuarioModificaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public System.DateTime fechaModifica {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableisp_ListarComprobantesFacturaYBoletaPorFecha.fechaModificaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'fechaModifica\' de la tabla \'isp_ListarComprobantesFactura" +
                                "YBoletaPorFecha\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tableisp_ListarComprobantesFacturaYBoletaPorFecha.fechaModificaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsidEmpresaNull() {
                return this.IsNull(this.tableisp_ListarComprobantesFacturaYBoletaPorFecha.idEmpresaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetidEmpresaNull() {
                this[this.tableisp_ListarComprobantesFacturaYBoletaPorFecha.idEmpresaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IstipComprobanteNull() {
                return this.IsNull(this.tableisp_ListarComprobantesFacturaYBoletaPorFecha.tipComprobanteColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SettipComprobanteNull() {
                this[this.tableisp_ListarComprobantesFacturaYBoletaPorFecha.tipComprobanteColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsdesTipComprobanteNull() {
                return this.IsNull(this.tableisp_ListarComprobantesFacturaYBoletaPorFecha.desTipComprobanteColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetdesTipComprobanteNull() {
                this[this.tableisp_ListarComprobantesFacturaYBoletaPorFecha.desTipComprobanteColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsserNroComprobanteNull() {
                return this.IsNull(this.tableisp_ListarComprobantesFacturaYBoletaPorFecha.serNroComprobanteColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetserNroComprobanteNull() {
                this[this.tableisp_ListarComprobantesFacturaYBoletaPorFecha.serNroComprobanteColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsserComprobanteNull() {
                return this.IsNull(this.tableisp_ListarComprobantesFacturaYBoletaPorFecha.serComprobanteColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetserComprobanteNull() {
                this[this.tableisp_ListarComprobantesFacturaYBoletaPorFecha.serComprobanteColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsnroComprobanteNull() {
                return this.IsNull(this.tableisp_ListarComprobantesFacturaYBoletaPorFecha.nroComprobanteColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetnroComprobanteNull() {
                this[this.tableisp_ListarComprobantesFacturaYBoletaPorFecha.nroComprobanteColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsfecComprobanteNull() {
                return this.IsNull(this.tableisp_ListarComprobantesFacturaYBoletaPorFecha.fecComprobanteColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetfecComprobanteNull() {
                this[this.tableisp_ListarComprobantesFacturaYBoletaPorFecha.fecComprobanteColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IscodMonedaNull() {
                return this.IsNull(this.tableisp_ListarComprobantesFacturaYBoletaPorFecha.codMonedaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetcodMonedaNull() {
                this[this.tableisp_ListarComprobantesFacturaYBoletaPorFecha.codMonedaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsdesMonedaNull() {
                return this.IsNull(this.tableisp_ListarComprobantesFacturaYBoletaPorFecha.desMonedaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetdesMonedaNull() {
                this[this.tableisp_ListarComprobantesFacturaYBoletaPorFecha.desMonedaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsimpCambioNull() {
                return this.IsNull(this.tableisp_ListarComprobantesFacturaYBoletaPorFecha.impCambioColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetimpCambioNull() {
                this[this.tableisp_ListarComprobantesFacturaYBoletaPorFecha.impCambioColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsserGuiaComprobanteNull() {
                return this.IsNull(this.tableisp_ListarComprobantesFacturaYBoletaPorFecha.serGuiaComprobanteColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetserGuiaComprobanteNull() {
                this[this.tableisp_ListarComprobantesFacturaYBoletaPorFecha.serGuiaComprobanteColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsnroGuiaComprobanteNull() {
                return this.IsNull(this.tableisp_ListarComprobantesFacturaYBoletaPorFecha.nroGuiaComprobanteColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetnroGuiaComprobanteNull() {
                this[this.tableisp_ListarComprobantesFacturaYBoletaPorFecha.nroGuiaComprobanteColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsfecGuiaComprobanteNull() {
                return this.IsNull(this.tableisp_ListarComprobantesFacturaYBoletaPorFecha.fecGuiaComprobanteColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetfecGuiaComprobanteNull() {
                this[this.tableisp_ListarComprobantesFacturaYBoletaPorFecha.fecGuiaComprobanteColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsidNroComandaNull() {
                return this.IsNull(this.tableisp_ListarComprobantesFacturaYBoletaPorFecha.idNroComandaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetidNroComandaNull() {
                this[this.tableisp_ListarComprobantesFacturaYBoletaPorFecha.idNroComandaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsidAmbienteNull() {
                return this.IsNull(this.tableisp_ListarComprobantesFacturaYBoletaPorFecha.idAmbienteColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetidAmbienteNull() {
                this[this.tableisp_ListarComprobantesFacturaYBoletaPorFecha.idAmbienteColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsidMesaNull() {
                return this.IsNull(this.tableisp_ListarComprobantesFacturaYBoletaPorFecha.idMesaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetidMesaNull() {
                this[this.tableisp_ListarComprobantesFacturaYBoletaPorFecha.idMesaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsidMozoNull() {
                return this.IsNull(this.tableisp_ListarComprobantesFacturaYBoletaPorFecha.idMozoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetidMozoNull() {
                this[this.tableisp_ListarComprobantesFacturaYBoletaPorFecha.idMozoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsturnoCajaNull() {
                return this.IsNull(this.tableisp_ListarComprobantesFacturaYBoletaPorFecha.turnoCajaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetturnoCajaNull() {
                this[this.tableisp_ListarComprobantesFacturaYBoletaPorFecha.turnoCajaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsmodPagoComprobanteNull() {
                return this.IsNull(this.tableisp_ListarComprobantesFacturaYBoletaPorFecha.modPagoComprobanteColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetmodPagoComprobanteNull() {
                this[this.tableisp_ListarComprobantesFacturaYBoletaPorFecha.modPagoComprobanteColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsdesPagoComprobanteNull() {
                return this.IsNull(this.tableisp_ListarComprobantesFacturaYBoletaPorFecha.desPagoComprobanteColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetdesPagoComprobanteNull() {
                this[this.tableisp_ListarComprobantesFacturaYBoletaPorFecha.desPagoComprobanteColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IstipMovComprobanteNull() {
                return this.IsNull(this.tableisp_ListarComprobantesFacturaYBoletaPorFecha.tipMovComprobanteColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SettipMovComprobanteNull() {
                this[this.tableisp_ListarComprobantesFacturaYBoletaPorFecha.tipMovComprobanteColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsimpEfeComprobanteNull() {
                return this.IsNull(this.tableisp_ListarComprobantesFacturaYBoletaPorFecha.impEfeComprobanteColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetimpEfeComprobanteNull() {
                this[this.tableisp_ListarComprobantesFacturaYBoletaPorFecha.impEfeComprobanteColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsimpDepComprobanteNull() {
                return this.IsNull(this.tableisp_ListarComprobantesFacturaYBoletaPorFecha.impDepComprobanteColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetimpDepComprobanteNull() {
                this[this.tableisp_ListarComprobantesFacturaYBoletaPorFecha.impDepComprobanteColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsimpTarComprobanteNull() {
                return this.IsNull(this.tableisp_ListarComprobantesFacturaYBoletaPorFecha.impTarComprobanteColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetimpTarComprobanteNull() {
                this[this.tableisp_ListarComprobantesFacturaYBoletaPorFecha.impTarComprobanteColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsimpBruComprobanteNull() {
                return this.IsNull(this.tableisp_ListarComprobantesFacturaYBoletaPorFecha.impBruComprobanteColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetimpBruComprobanteNull() {
                this[this.tableisp_ListarComprobantesFacturaYBoletaPorFecha.impBruComprobanteColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsimpIgvComprobanteNull() {
                return this.IsNull(this.tableisp_ListarComprobantesFacturaYBoletaPorFecha.impIgvComprobanteColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetimpIgvComprobanteNull() {
                this[this.tableisp_ListarComprobantesFacturaYBoletaPorFecha.impIgvComprobanteColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsimpNetComprobanteNull() {
                return this.IsNull(this.tableisp_ListarComprobantesFacturaYBoletaPorFecha.impNetComprobanteColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetimpNetComprobanteNull() {
                this[this.tableisp_ListarComprobantesFacturaYBoletaPorFecha.impNetComprobanteColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsimpDtrComprobanteNull() {
                return this.IsNull(this.tableisp_ListarComprobantesFacturaYBoletaPorFecha.impDtrComprobanteColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetimpDtrComprobanteNull() {
                this[this.tableisp_ListarComprobantesFacturaYBoletaPorFecha.impDtrComprobanteColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsidClienteNull() {
                return this.IsNull(this.tableisp_ListarComprobantesFacturaYBoletaPorFecha.idClienteColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetidClienteNull() {
                this[this.tableisp_ListarComprobantesFacturaYBoletaPorFecha.idClienteColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsnroIdentificacionClienteNull() {
                return this.IsNull(this.tableisp_ListarComprobantesFacturaYBoletaPorFecha.nroIdentificacionClienteColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetnroIdentificacionClienteNull() {
                this[this.tableisp_ListarComprobantesFacturaYBoletaPorFecha.nroIdentificacionClienteColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsnombreRazSocialClienteNull() {
                return this.IsNull(this.tableisp_ListarComprobantesFacturaYBoletaPorFecha.nombreRazSocialClienteColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetnombreRazSocialClienteNull() {
                this[this.tableisp_ListarComprobantesFacturaYBoletaPorFecha.nombreRazSocialClienteColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IstipClienteNull() {
                return this.IsNull(this.tableisp_ListarComprobantesFacturaYBoletaPorFecha.tipClienteColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SettipClienteNull() {
                this[this.tableisp_ListarComprobantesFacturaYBoletaPorFecha.tipClienteColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsestadoComprobanteNull() {
                return this.IsNull(this.tableisp_ListarComprobantesFacturaYBoletaPorFecha.estadoComprobanteColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetestadoComprobanteNull() {
                this[this.tableisp_ListarComprobantesFacturaYBoletaPorFecha.estadoComprobanteColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsdesEstadoNull() {
                return this.IsNull(this.tableisp_ListarComprobantesFacturaYBoletaPorFecha.desEstadoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetdesEstadoNull() {
                this[this.tableisp_ListarComprobantesFacturaYBoletaPorFecha.desEstadoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsobsComprobanteNull() {
                return this.IsNull(this.tableisp_ListarComprobantesFacturaYBoletaPorFecha.obsComprobanteColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetobsComprobanteNull() {
                this[this.tableisp_ListarComprobantesFacturaYBoletaPorFecha.obsComprobanteColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsusuarioAgregaNull() {
                return this.IsNull(this.tableisp_ListarComprobantesFacturaYBoletaPorFecha.usuarioAgregaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetusuarioAgregaNull() {
                this[this.tableisp_ListarComprobantesFacturaYBoletaPorFecha.usuarioAgregaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsfechaAgregaNull() {
                return this.IsNull(this.tableisp_ListarComprobantesFacturaYBoletaPorFecha.fechaAgregaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetfechaAgregaNull() {
                this[this.tableisp_ListarComprobantesFacturaYBoletaPorFecha.fechaAgregaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsusuarioModificaNull() {
                return this.IsNull(this.tableisp_ListarComprobantesFacturaYBoletaPorFecha.usuarioModificaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetusuarioModificaNull() {
                this[this.tableisp_ListarComprobantesFacturaYBoletaPorFecha.usuarioModificaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsfechaModificaNull() {
                return this.IsNull(this.tableisp_ListarComprobantesFacturaYBoletaPorFecha.fechaModificaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetfechaModificaNull() {
                this[this.tableisp_ListarComprobantesFacturaYBoletaPorFecha.fechaModificaColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public class isp_ListarComprobantesFacturaYBoletaPorFechaRowChangeEvent : global::System.EventArgs {
            
            private isp_ListarComprobantesFacturaYBoletaPorFechaRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public isp_ListarComprobantesFacturaYBoletaPorFechaRowChangeEvent(isp_ListarComprobantesFacturaYBoletaPorFechaRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public isp_ListarComprobantesFacturaYBoletaPorFechaRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace GestionClubView.DataSet.DsGestionClubTableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class isp_ListarComprobantesFacturaYBoletaPorFechaTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public isp_ListarComprobantesFacturaYBoletaPorFechaTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "isp_ListarComprobantesFacturaYBoletaPorFecha";
            tableMapping.ColumnMappings.Add("idComprobante", "idComprobante");
            tableMapping.ColumnMappings.Add("idEmpresa", "idEmpresa");
            tableMapping.ColumnMappings.Add("tipComprobante", "tipComprobante");
            tableMapping.ColumnMappings.Add("desTipComprobante", "desTipComprobante");
            tableMapping.ColumnMappings.Add("serNroComprobante", "serNroComprobante");
            tableMapping.ColumnMappings.Add("serComprobante", "serComprobante");
            tableMapping.ColumnMappings.Add("nroComprobante", "nroComprobante");
            tableMapping.ColumnMappings.Add("fecComprobante", "fecComprobante");
            tableMapping.ColumnMappings.Add("codMoneda", "codMoneda");
            tableMapping.ColumnMappings.Add("desMoneda", "desMoneda");
            tableMapping.ColumnMappings.Add("impCambio", "impCambio");
            tableMapping.ColumnMappings.Add("serGuiaComprobante", "serGuiaComprobante");
            tableMapping.ColumnMappings.Add("nroGuiaComprobante", "nroGuiaComprobante");
            tableMapping.ColumnMappings.Add("fecGuiaComprobante", "fecGuiaComprobante");
            tableMapping.ColumnMappings.Add("idNroComanda", "idNroComanda");
            tableMapping.ColumnMappings.Add("idAmbiente", "idAmbiente");
            tableMapping.ColumnMappings.Add("idMesa", "idMesa");
            tableMapping.ColumnMappings.Add("idMozo", "idMozo");
            tableMapping.ColumnMappings.Add("turnoCaja", "turnoCaja");
            tableMapping.ColumnMappings.Add("modPagoComprobante", "modPagoComprobante");
            tableMapping.ColumnMappings.Add("desPagoComprobante", "desPagoComprobante");
            tableMapping.ColumnMappings.Add("tipMovComprobante", "tipMovComprobante");
            tableMapping.ColumnMappings.Add("impEfeComprobante", "impEfeComprobante");
            tableMapping.ColumnMappings.Add("impDepComprobante", "impDepComprobante");
            tableMapping.ColumnMappings.Add("impTarComprobante", "impTarComprobante");
            tableMapping.ColumnMappings.Add("impBruComprobante", "impBruComprobante");
            tableMapping.ColumnMappings.Add("impIgvComprobante", "impIgvComprobante");
            tableMapping.ColumnMappings.Add("impNetComprobante", "impNetComprobante");
            tableMapping.ColumnMappings.Add("impDtrComprobante", "impDtrComprobante");
            tableMapping.ColumnMappings.Add("idCliente", "idCliente");
            tableMapping.ColumnMappings.Add("nroIdentificacionCliente", "nroIdentificacionCliente");
            tableMapping.ColumnMappings.Add("nombreRazSocialCliente", "nombreRazSocialCliente");
            tableMapping.ColumnMappings.Add("tipCliente", "tipCliente");
            tableMapping.ColumnMappings.Add("estadoComprobante", "estadoComprobante");
            tableMapping.ColumnMappings.Add("desEstado", "desEstado");
            tableMapping.ColumnMappings.Add("obsComprobante", "obsComprobante");
            tableMapping.ColumnMappings.Add("usuarioAgrega", "usuarioAgrega");
            tableMapping.ColumnMappings.Add("fechaAgrega", "fechaAgrega");
            tableMapping.ColumnMappings.Add("usuarioModifica", "usuarioModifica");
            tableMapping.ColumnMappings.Add("fechaModifica", "fechaModifica");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::GestionClubView.Properties.Settings.Default.DbGestionClubConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "dbo.isp_ListarComprobantesFacturaYBoletaPorFecha";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@idEmpresa", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@fecComprobante", global::System.Data.SqlDbType.DateTime, 8, global::System.Data.ParameterDirection.Input, 23, 3, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DsGestionClub.isp_ListarComprobantesFacturaYBoletaPorFechaDataTable dataTable, global::System.Nullable<int> idEmpresa, global::System.Nullable<global::System.DateTime> fecComprobante) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((idEmpresa.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(idEmpresa.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((fecComprobante.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[2].Value = ((System.DateTime)(fecComprobante.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DsGestionClub.isp_ListarComprobantesFacturaYBoletaPorFechaDataTable GetData(global::System.Nullable<int> idEmpresa, global::System.Nullable<global::System.DateTime> fecComprobante) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((idEmpresa.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(idEmpresa.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((fecComprobante.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[2].Value = ((System.DateTime)(fecComprobante.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            DsGestionClub.isp_ListarComprobantesFacturaYBoletaPorFechaDataTable dataTable = new DsGestionClub.isp_ListarComprobantesFacturaYBoletaPorFechaDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD" +
        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")]
    public partial class TableAdapterManager : global::System.ComponentModel.Component {
        
        private UpdateOrderOption _updateOrder;
        
        private bool _backupDataSetBeforeUpdate;
        
        private global::System.Data.IDbConnection _connection;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public UpdateOrderOption UpdateOrder {
            get {
                return this._updateOrder;
            }
            set {
                this._updateOrder = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public bool BackupDataSetBeforeUpdate {
            get {
                return this._backupDataSetBeforeUpdate;
            }
            set {
                this._backupDataSetBeforeUpdate = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public global::System.Data.IDbConnection Connection {
            get {
                if ((this._connection != null)) {
                    return this._connection;
                }
                return null;
            }
            set {
                this._connection = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public int TableAdapterInstanceCount {
            get {
                int count = 0;
                return count;
            }
        }
        
        /// <summary>
        ///Update rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private int UpdateUpdatedRows(DsGestionClub dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            return result;
        }
        
        /// <summary>
        ///Insert rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private int UpdateInsertedRows(DsGestionClub dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            return result;
        }
        
        /// <summary>
        ///Delete rows in bottom-up order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private int UpdateDeletedRows(DsGestionClub dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows) {
            int result = 0;
            return result;
        }
        
        /// <summary>
        ///Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private global::System.Data.DataRow[] GetRealUpdatedRows(global::System.Data.DataRow[] updatedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            if (((updatedRows == null) 
                        || (updatedRows.Length < 1))) {
                return updatedRows;
            }
            if (((allAddedRows == null) 
                        || (allAddedRows.Count < 1))) {
                return updatedRows;
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> realUpdatedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            for (int i = 0; (i < updatedRows.Length); i = (i + 1)) {
                global::System.Data.DataRow row = updatedRows[i];
                if ((allAddedRows.Contains(row) == false)) {
                    realUpdatedRows.Add(row);
                }
            }
            return realUpdatedRows.ToArray();
        }
        
        /// <summary>
        ///Update all changes to the dataset.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public virtual int UpdateAll(DsGestionClub dataSet) {
            if ((dataSet == null)) {
                throw new global::System.ArgumentNullException("dataSet");
            }
            if ((dataSet.HasChanges() == false)) {
                return 0;
            }
            global::System.Data.IDbConnection workConnection = this.Connection;
            if ((workConnection == null)) {
                throw new global::System.ApplicationException("TableAdapterManager no contiene información de conexión. Establezca cada propieda" +
                        "d TableAdapterManager TableAdapter en una instancia TableAdapter válida.");
            }
            bool workConnOpened = false;
            if (((workConnection.State & global::System.Data.ConnectionState.Broken) 
                        == global::System.Data.ConnectionState.Broken)) {
                workConnection.Close();
            }
            if ((workConnection.State == global::System.Data.ConnectionState.Closed)) {
                workConnection.Open();
                workConnOpened = true;
            }
            global::System.Data.IDbTransaction workTransaction = workConnection.BeginTransaction();
            if ((workTransaction == null)) {
                throw new global::System.ApplicationException("La transacción no puede comenzar. La conexión de datos actual no es compatible co" +
                        "n las transacciones o el estado actual no permite que comience la transacción.");
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter> adaptersWithAcceptChangesDuringUpdate = new global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter>();
            global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection> revertConnections = new global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection>();
            int result = 0;
            global::System.Data.DataSet backupDataSet = null;
            if (this.BackupDataSetBeforeUpdate) {
                backupDataSet = new global::System.Data.DataSet();
                backupDataSet.Merge(dataSet);
            }
            try {
                // ---- Prepare for update -----------
                //
                // 
                //---- Perform updates -----------
                //
                if ((this.UpdateOrder == UpdateOrderOption.UpdateInsertDelete)) {
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                }
                else {
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                }
                result = (result + this.UpdateDeletedRows(dataSet, allChangedRows));
                // 
                //---- Commit updates -----------
                //
                workTransaction.Commit();
                if ((0 < allAddedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                    allAddedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
                if ((0 < allChangedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allChangedRows.Count];
                    allChangedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
            }
            catch (global::System.Exception ex) {
                workTransaction.Rollback();
                // ---- Restore the dataset -----------
                if (this.BackupDataSetBeforeUpdate) {
                    global::System.Diagnostics.Debug.Assert((backupDataSet != null));
                    dataSet.Clear();
                    dataSet.Merge(backupDataSet);
                }
                else {
                    if ((0 < allAddedRows.Count)) {
                        global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                        allAddedRows.CopyTo(rows);
                        for (int i = 0; (i < rows.Length); i = (i + 1)) {
                            global::System.Data.DataRow row = rows[i];
                            row.AcceptChanges();
                            row.SetAdded();
                        }
                    }
                }
                throw ex;
            }
            finally {
                if (workConnOpened) {
                    workConnection.Close();
                }
                if ((0 < adaptersWithAcceptChangesDuringUpdate.Count)) {
                    global::System.Data.Common.DataAdapter[] adapters = new System.Data.Common.DataAdapter[adaptersWithAcceptChangesDuringUpdate.Count];
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters);
                    for (int i = 0; (i < adapters.Length); i = (i + 1)) {
                        global::System.Data.Common.DataAdapter adapter = adapters[i];
                        adapter.AcceptChangesDuringUpdate = true;
                    }
                }
            }
            return result;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected virtual void SortSelfReferenceRows(global::System.Data.DataRow[] rows, global::System.Data.DataRelation relation, bool childFirst) {
            global::System.Array.Sort<global::System.Data.DataRow>(rows, new SelfReferenceComparer(relation, childFirst));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected virtual bool MatchTableAdapterConnection(global::System.Data.IDbConnection inputConnection) {
            if ((this._connection != null)) {
                return true;
            }
            if (((this.Connection == null) 
                        || (inputConnection == null))) {
                return true;
            }
            if (string.Equals(this.Connection.ConnectionString, inputConnection.ConnectionString, global::System.StringComparison.Ordinal)) {
                return true;
            }
            return false;
        }
        
        /// <summary>
        ///Update Order Option
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public enum UpdateOrderOption {
            
            InsertUpdateDelete = 0,
            
            UpdateInsertDelete = 1,
        }
        
        /// <summary>
        ///Used to sort self-referenced table's rows
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private class SelfReferenceComparer : object, global::System.Collections.Generic.IComparer<global::System.Data.DataRow> {
            
            private global::System.Data.DataRelation _relation;
            
            private int _childFirst;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal SelfReferenceComparer(global::System.Data.DataRelation relation, bool childFirst) {
                this._relation = relation;
                if (childFirst) {
                    this._childFirst = -1;
                }
                else {
                    this._childFirst = 1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            private global::System.Data.DataRow GetRoot(global::System.Data.DataRow row, out int distance) {
                global::System.Diagnostics.Debug.Assert((row != null));
                global::System.Data.DataRow root = row;
                distance = 0;

                global::System.Collections.Generic.IDictionary<global::System.Data.DataRow, global::System.Data.DataRow> traversedRows = new global::System.Collections.Generic.Dictionary<global::System.Data.DataRow, global::System.Data.DataRow>();
                traversedRows[row] = row;

                global::System.Data.DataRow parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                for (
                ; ((parent != null) 
                            && (traversedRows.ContainsKey(parent) == false)); 
                ) {
                    distance = (distance + 1);
                    root = parent;
                    traversedRows[parent] = parent;
                    parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                }

                if ((distance == 0)) {
                    traversedRows.Clear();
                    traversedRows[row] = row;
                    parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    for (
                    ; ((parent != null) 
                                && (traversedRows.ContainsKey(parent) == false)); 
                    ) {
                        distance = (distance + 1);
                        root = parent;
                        traversedRows[parent] = parent;
                        parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    }
                }

                return root;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int Compare(global::System.Data.DataRow row1, global::System.Data.DataRow row2) {
                if (object.ReferenceEquals(row1, row2)) {
                    return 0;
                }
                if ((row1 == null)) {
                    return -1;
                }
                if ((row2 == null)) {
                    return 1;
                }

                int distance1 = 0;
                global::System.Data.DataRow root1 = this.GetRoot(row1, out distance1);

                int distance2 = 0;
                global::System.Data.DataRow root2 = this.GetRoot(row2, out distance2);

                if (object.ReferenceEquals(root1, root2)) {
                    return (this._childFirst * distance1.CompareTo(distance2));
                }
                else {
                    global::System.Diagnostics.Debug.Assert(((root1.Table != null) 
                                    && (root2.Table != null)));
                    if ((root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2))) {
                        return -1;
                    }
                    else {
                        return 1;
                    }
                }
            }
        }
    }
}

#pragma warning restore 1591